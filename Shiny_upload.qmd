---
title: "Shiny"
author: "Gop Arop"
format: 
  html:
    embed-resources: true
    warning: false
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(shiny)
library(glue)
```

```{r}
seasons_choice <- paste0(substr(seq(2023, 2000), 1, 4), "-", substr(seq(2024, 2001), 3, 4))

```


```{r}

ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      selectInput("player_sel", label = "Select a Player", choices = NULL),
      selectInput("season_sel", label = "Select a Season", choices = seasons_choice)
  ),
  mainPanel(plotOutput("shot_chart")))
)

server <- function(input, output, session) {
  
  data_react <- reactive({
    data <- tibble(nba_leaguedashplayershotlocations(league_id = '00', season = input$season_sel)) 
    
    shot_data <-  tibble(nba_shotchartdetail(league_id = '00', player_id = '202696', season = input$season_sel))
    
    data <- shot_data[[1]][[1]] |> 
      mutate(LOC_X = as.numeric(LOC_X), LOC_Y = as.numeric(LOC_Y), xx = LOC_X/10, yy = LOC_Y/10 - 41.75) |> 
      rename(shot_distance = SHOT_DISTANCE, original_x = LOC_X, original_y = LOC_Y, converted_y = yy, converted_x = xx)
  })
  
  
  output$shot_chart <- renderPlot({
    p <- ggplot(data = data_react(), aes(x = converted_x,y = converted_y)) + geom_point() + coord_fixed() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "white"), axis.title = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
    
  drawNBAcourt(p)
  })
}

shinyApp(ui, server)
```









