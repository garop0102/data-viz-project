---
title: "Three-Pointers in the NBA"
author: "Gop Arop"
format: revealjs
---


## Data
 
* Question of interest investigated: How prominent has the 3 point shot been in the last 24 years?

* Data sources: HoopR & BasketballAnalyzeR packages, BasketballReference.com

* Packages and scraping contains thousands of observations on team/indivudal statistics. 

* Stats can come in the form of per game, totals, or even in-game for a specific game.

## Visualization 1


```{r, warning=FALSE,echo=FALSE}
library(tidyverse)
library(hoopR)
library(BasketballAnalyzeR)
shot_data <-  tibble(nba_shotchartdetail(league_id = '00', player_id = '2544', season = "2023-24"))

data <- shot_data[[1]][[1]] |> 
  mutate(LOC_X = as.numeric(LOC_X), LOC_Y = as.numeric(LOC_Y), xx = LOC_X/10, yy = LOC_Y/10 - 41.75) |> 
  rename(shot_distance = SHOT_DISTANCE, original_x = LOC_X, original_y = LOC_Y, converted_y = yy, converted_x = xx) |>
  filter(EVENT_TYPE == "Made Shot")
```

```{r}
chart <- ggplot(data = data, aes(x = converted_x,y = converted_y)) + geom_point() + coord_fixed() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_rect(fill = "white"), axis.title = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())

table <- data |> 
  mutate(ind_2s = if_else(SHOT_TYPE == "2PT Field Goal", 1, 0),
         ind_3s = if_else(SHOT_TYPE == "3PT Field Goal", 1, 0)) |>
  summarise("Proportion of Makes 2s" = sum(ind_2s) / n(), "Proportion of Makes 3s" = sum(ind_3s) / n())


table
drawNBAcourt(chart)
```



## Visualization 2


```{r warning=FALSE,echo=FALSE}
library(rvest)
team_totals <- tibble()

for (year in 2000:2010) {
  Sys.sleep(4)
  
  teamStats_url <- sprintf("https://www.basketball-reference.com/leagues/NBA_%s.html", year)
  
  team_stats <- read_html(teamStats_url) |> 
    html_nodes("table") |>
    html_table() 
  
  team_stats_current <- team_stats[[6]]
  
  team_stats_current$SEASON <- year
  
  team_totals <- bind_rows(team_totals, team_stats_current) 
}

for (year in 2011:2015) {
  Sys.sleep(4)
  
  teamStats_url <- sprintf("https://www.basketball-reference.com/leagues/NBA_%s.html", year)
  
  team_stats <- read_html(teamStats_url) |> 
    html_nodes("table") |>
    html_table() 
  
  team_stats_current <- team_stats[[6]]
  
  team_stats_current$SEASON <- year
  
  team_totals <- bind_rows(team_totals, team_stats_current) 
}

for (year in 2016:2024) {
  Sys.sleep(4)
  
  teamStats_url <- sprintf("https://www.basketball-reference.com/leagues/NBA_%s.html", year)
  
  team_stats <- read_html(teamStats_url) |> 
    html_nodes("table") |>
    html_table() 
  
  team_stats_current <- team_stats[[8]]
  
  team_stats_current$SEASON <- year
  
  team_totals <- bind_rows(team_totals, team_stats_current) 
}


```

```{r warning=FALSE,echo=FALSE}
team_totals <- team_totals |>
  mutate(SEASON = as.factor(SEASON)) |>
  filter(Team != "League Average")
```

```{r warning=FALSE,echo=FALSE}
library(broom)
threepoint_mod <- lm(`3PA` ~ SEASON, data = team_totals)
threepoint_mod <- threepoint_mod |> tidy()
```

```{r}
team_mod <- team_totals |>
  mutate(DECADE = case_when(SEASON %in%
              c("2000","2001","2002","2003","2004","2005","2006","2007","2008","2009") ~ "2000s",
                            SEASON %in%
              c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019") ~ "2010s",
                            .default = "Early 2020s")) |>
  group_by(SEASON, DECADE) |>
  summarise(`3PA` = mean(`3PA`))

ggplot(data = team_mod, aes(x = SEASON, y = `3PA`, group = DECADE)) + geom_point() + geom_line() + facet_grid(~DECADE, scales = "free_x") + theme_light()
```


## Summary Statistics


```{r}
options(dplyr.print_max = Inf)
options(tibble.print_max = Inf)

threepoint_mod
```


## Visualization 3


```{r}
players <-  nba_leagueleaders(season = "2022-23", stat_category = "PTS", per_mode = "PerGame")

players <- players[["LeagueLeaders"]] |>
  mutate(PTS = as.numeric(PTS))

players <- players |>
  arrange(desc(PTS)) |>
  slice(1:20)

names(players)
```

```{r}
library(plotly)
library(glue)
players <- players |> mutate(FG3A = as.numeric(FG3A), FGA = as.numeric(FGA), EFF = as.numeric(EFF))
mean_y <- mean(players$FG3A)
mean_x <- mean(players$EFF)

quad_plot <- ggplot(players, aes(x=EFF, y=FG3A, label = PLAYER)) +
  geom_point() + 
  theme_minimal() +
  geom_vline(xintercept = mean_x) + geom_hline(yintercept = mean_y) 

ggplotly(quad_plot, tooltip = "label")
```

